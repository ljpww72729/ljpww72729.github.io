<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>树上刺猬</title>
    <description>一带一路
</description>
    <logo>https://ljpww72729.github.io</logo> 
    <link>https://ljpww72729.github.io/</link>
    <atom:link href="https://ljpww72729.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 30 Aug 2018 10:52:14 +0800</pubDate>
    <lastBuildDate>Thu, 30 Aug 2018 10:52:14 +0800</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Git相关命令</title>
        <description>&lt;!-- 这里显示的是摘要信息也是概要信息 --&gt;

&lt;p&gt;Git相关命令汇总，平时遇到的一些Git问题整理&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#配置&quot; id=&quot;markdown-toc-配置&quot;&gt;配置&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#查看提交分支树&quot; id=&quot;markdown-toc-查看提交分支树&quot;&gt;查看提交分支树&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#查看状态&quot; id=&quot;markdown-toc-查看状态&quot;&gt;查看状态&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#相关命令&quot; id=&quot;markdown-toc-相关命令&quot;&gt;相关命令&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#找回曾经的的一些提交或已删除的分支&quot; id=&quot;markdown-toc-找回曾经的的一些提交或已删除的分支&quot;&gt;找回曾经的的一些提交或已删除的分支&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#上传本地分支到远程仓库在远程仓库创建该分支同时本地跟踪远程分支&quot; id=&quot;markdown-toc-上传本地分支到远程仓库在远程仓库创建该分支同时本地跟踪远程分支&quot;&gt;上传本地分支到远程仓库，在远程仓库创建该分支，同时本地跟踪远程分支&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#创建一个新的仓库并将本地工程同步到git仓库中&quot; id=&quot;markdown-toc-创建一个新的仓库并将本地工程同步到git仓库中&quot;&gt;创建一个新的仓库，并将本地工程同步到git仓库中&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#问题汇总&quot; id=&quot;markdown-toc-问题汇总&quot;&gt;问题汇总&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#执行git-push--u-origin-master将本地工程同步到github上报如下错误&quot; id=&quot;markdown-toc-执行git-push--u-origin-master将本地工程同步到github上报如下错误&quot;&gt;执行git push -u origin master将本地工程同步到GitHub上，报如下错误：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#remote-repository-not-found&quot; id=&quot;markdown-toc-remote-repository-not-found&quot;&gt;remote: Repository not found.&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;!-- 设置图片公共地址 --&gt;

&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;
&lt;h3 id=&quot;查看提交分支树&quot;&gt;查看提交分支树&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git log --graph --oneline --decorate
别名：git config --global alias.log-dec &quot;log --graph --oneline --decorate&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;查看状态&quot;&gt;查看状态&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git status -s
别名：git config --global alias.st-s &quot;status -s&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;相关命令&quot;&gt;相关命令&lt;/h2&gt;
&lt;h3 id=&quot;找回曾经的的一些提交或已删除的分支&quot;&gt;找回曾经的的一些提交或已删除的分支&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git reflog show：显示提交的历史
git reset --hard SHA : SHA为需要恢复的commit对应的SHA值
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;上传本地分支到远程仓库在远程仓库创建该分支同时本地跟踪远程分支&quot;&gt;上传本地分支到远程仓库，在远程仓库创建该分支，同时本地跟踪远程分支&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git push orign dev-lipeng:dev-lipeng //推送到仓库
git branch -u origin/dev-lipeng //跟踪远程分支
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF&quot;&gt;Git 分支 - 远程分支&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建一个新的仓库并将本地工程同步到git仓库中&quot;&gt;创建一个新的仓库，并将本地工程同步到git仓库中&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;…or create a new repository on the command line
echo &quot;# environment&quot; &amp;gt;&amp;gt; README.md
git init
git add README.md
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/ljpww72729/environment.git
git push -u origin master

…or push an existing repository from the command line
git remote add origin https://github.com/ljpww72729/environment.git
git push -u origin master
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;问题汇总&quot;&gt;问题汇总&lt;/h2&gt;
&lt;h3 id=&quot;执行git-push--u-origin-master将本地工程同步到github上报如下错误&quot;&gt;执行git push -u origin master将本地工程同步到GitHub上，报如下错误：&lt;/h3&gt;
&lt;p&gt;error: src refspec master does not match any.&lt;br /&gt;
error: failed to push some refs to ‘https://github.com/ljpww72729/location.git’&lt;/p&gt;

&lt;p&gt;可能的原因：本地并未提交任何代码，所以本地无可提交的分支。&lt;/p&gt;

&lt;h3 id=&quot;remote-repository-not-found&quot;&gt;remote: Repository not found.&lt;/h3&gt;
&lt;p&gt;fatal: repository ‘https://github.com/WFC-LinkedME/Android-Deep-Linking-SDK.git/’ not found&lt;br /&gt;
在clone或git的其他操作私有库时，提示如上错误，有几点原因会导致该问题，参考官方帮助文档：&lt;br /&gt;
https://help.github.com/articles/error-repository-not-found/&lt;br /&gt;
不过我个人该问题的产生并不是官方中提到的原因，而是升级系统后出现的问题，网上查阅资料并没有有效的解决办法，最后发现是：在执行命令的时候没有自动添加github的帐号和密码，所以没有权限访问该资源，但是明明设置了用户名及密码，并没有起作用，所以只能手动添加用户名及密码。&lt;br /&gt;
https://username:password@github.com/WFC-LinkedME/Android-Deep-Linking-SDK.git
如果git clone 以上链接是没有问题的，也不会报错误。但是现有的AS工程在执行git fetch + 以上链接的时候，虽然没有报错，但是还是无法fetch任何东西下来，因此该方式并不适合已经clone的项目，所以只能另想其他方法，最后在一篇文章中受到启发，修改git库中remote的origin链接。在已clone的库中打开.git/config文件，修改其中remote origin中的url地址，改成手动添加用户名密码的地址。如下所示。 &lt;br /&gt;
&lt;img src=&quot;/assets/blog/images/201805/11-git-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 11 May 2018 15:26:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/tutorials/git%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/tutorials/git%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html</guid>
        
        <category>git</category>
        
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Aria2配置</title>
        <description>&lt;!-- 这里显示的是摘要信息也是概要信息 --&gt;

&lt;p&gt;aria2配置相关&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#配置&quot; id=&quot;markdown-toc-配置&quot;&gt;配置&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#启动aria2&quot; id=&quot;markdown-toc-启动aria2&quot;&gt;启动aria2&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#关闭aria2&quot; id=&quot;markdown-toc-关闭aria2&quot;&gt;关闭aria2&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#webui配置&quot; id=&quot;markdown-toc-webui配置&quot;&gt;webui配置&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#相关命令&quot; id=&quot;markdown-toc-相关命令&quot;&gt;相关命令&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#命令行创建任务下载任务&quot; id=&quot;markdown-toc-命令行创建任务下载任务&quot;&gt;命令行创建任务下载任务&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#参考&quot; id=&quot;markdown-toc-参考&quot;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;!-- 设置图片公共地址 --&gt;

&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;
&lt;p&gt;参考：http://sspai.com/32167&lt;/p&gt;

&lt;h3 id=&quot;启动aria2&quot;&gt;启动aria2&lt;/h3&gt;
&lt;p&gt;aria2c –conf-path=”/Users/LinkedME06/Dropbox/PersonalPreferences/Aria2/aria2.conf” -D&lt;/p&gt;
&lt;h3 id=&quot;关闭aria2&quot;&gt;关闭aria2&lt;/h3&gt;
&lt;p&gt;如果你想关掉后台的 aria2，可以到活动监视器中找到 aria2c 杀掉，也可以在终端输入kill aria2之后按 Tab 键，aria2 会自动变成进程号，回车即可杀掉它。&lt;/p&gt;
&lt;h3 id=&quot;webui配置&quot;&gt;webui配置&lt;/h3&gt;
&lt;p&gt;查看下载进度使用Aria2 WebUI：  http://ziahamza.github.io/webui-aria2/#&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;按照图示更改配置后，webui会自动保存配置到浏览器缓存中，下次打开的时候仍会使用更改后的配置，直接显示下载进程。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注意一下红色区域：&lt;br /&gt;
&lt;img src=&quot;/assets/blog/images/201804/26-aria2-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;相关命令&quot;&gt;相关命令&lt;/h2&gt;
&lt;h3 id=&quot;命令行创建任务下载任务&quot;&gt;命令行创建任务下载任务&lt;/h3&gt;
&lt;p&gt;Download from WEB:&lt;br /&gt;
$ aria2c http://example.org/mylinux.iso&lt;/p&gt;

&lt;p&gt;Download from 2 sources:&lt;br /&gt;
$ aria2c http://a/f.iso ftp://b/f.iso&lt;/p&gt;

&lt;p&gt;Download using 2 connections per host:&lt;br /&gt;
$ aria2c -x2 http://a/f.iso&lt;/p&gt;

&lt;p&gt;BitTorrent:&lt;br /&gt;
$ aria2c http://example.org/mylinux.torrent&lt;/p&gt;

&lt;p&gt;BitTorrent Magnet URI:&lt;br /&gt;
$ aria2c ‘magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C’&lt;/p&gt;

&lt;p&gt;Metalink:&lt;br /&gt;
$ aria2c http://example.org/mylinux.metalink&lt;/p&gt;

&lt;p&gt;Download URIs found in text file:&lt;br /&gt;
$ aria2c -i uris.txt&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;p&gt;aria2下载地址：https://aria2.github.io/&lt;br /&gt;
百度网盘下载破解：https://github.com/acgotaku/BaiduExporter&lt;br /&gt;
下载教程翻译：https://github.com/erasin/notes/blob/master/linux/soft/aria2.md&lt;/p&gt;

</description>
        <pubDate>Thu, 26 Apr 2018 10:47:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/tools/aria2%E9%85%8D%E7%BD%AE.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/tools/aria2%E9%85%8D%E7%BD%AE.html</guid>
        
        <category>aria2</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>memcached问题汇总</title>
        <description>&lt;!-- 这里显示的是摘要信息也是概要信息 --&gt;

&lt;p&gt;Jekyll kramdown 语法示例&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#安装&quot; id=&quot;markdown-toc-安装&quot;&gt;安装&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#安装问题及解决办法&quot; id=&quot;markdown-toc-安装问题及解决办法&quot;&gt;安装问题及解决办法：&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#1-memcached-no-acceptable-c-compiler-found-in-path&quot; id=&quot;markdown-toc-1-memcached-no-acceptable-c-compiler-found-in-path&quot;&gt;1. memcached no acceptable C compiler found in $PATH&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#2-cant-run-as-root-without-the--u-switch&quot; id=&quot;markdown-toc-2-cant-run-as-root-without-the--u-switch&quot;&gt;2. can’t run as root without the -u switch&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#3-telnet-command-not-found&quot; id=&quot;markdown-toc-3-telnet-command-not-found&quot;&gt;3. telnet: command not found&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#参数说明&quot; id=&quot;markdown-toc-参数说明&quot;&gt;参数说明&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#stats&quot; id=&quot;markdown-toc-stats&quot;&gt;stats&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;!-- 设置图片公共地址 --&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;安装参考：&lt;br /&gt;
&lt;a href=&quot;https://blog.csdn.net/luanlouis/article/details/42425105&quot;&gt;高性能缓存库Memcached 基础教程&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/memcached/memcached/wiki/Install&quot;&gt;官方安装指南&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;安装问题及解决办法&quot;&gt;安装问题及解决办法：&lt;/h3&gt;
&lt;h4 id=&quot;1-memcached-no-acceptable-c-compiler-found-in-path&quot;&gt;1. memcached no acceptable C compiler found in $PATH&lt;/h4&gt;
&lt;p&gt;安装gcc:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;yum install gcc&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;参考：https://stackoverflow.com/questions/22067913/when-installing-memcached-i-receive-configure-error-no-acceptable-c-compiler&lt;/p&gt;

&lt;h4 id=&quot;2-cant-run-as-root-without-the--u-switch&quot;&gt;2. can’t run as root without the -u switch&lt;/h4&gt;
&lt;p&gt;在执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;memcached -d -p 11211 -m 256&lt;/code&gt; 时会报以上错误。
说明：如果没有带 -u root 的话就会报：
can’t run as root without the -u switch
解决：带-u root就行！&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;memcached -u root -d -p 11211 -m 256&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;参考：https://blog.csdn.net/e_wsq/article/details/20082307&lt;/p&gt;

&lt;h4 id=&quot;3-telnet-command-not-found&quot;&gt;3. telnet: command not found&lt;/h4&gt;
&lt;p&gt;安装telnet:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;yum list telnet*              列出telnet相关的安装包&lt;br /&gt;
 yum install telnet-server           安装telnet服务&lt;br /&gt;
 yum install telnet.*            安装telnet客户端&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;参数说明&quot;&gt;参数说明&lt;/h2&gt;
&lt;h3 id=&quot;stats&quot;&gt;stats&lt;/h3&gt;
&lt;p&gt;stats 是statistics单词的拼写，即统计的意思。该指令攻击当前memcached服务的各种指标。这些指标跟memcached 的性能和工作状况紧密相关。&lt;br /&gt;
摘自：https://blog.csdn.net/luanlouis/article/details/42425105
&lt;img src=&quot;/assets/blog/images/201804/24-memcached-01.png&quot; alt=&quot;&quot; /&gt;
可通过本机远程获取该stats状态，使用如下命令：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;echo stats | nc 192.168.1.123 11211&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Tue, 24 Apr 2018 18:14:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/tutorials/memcached%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/tutorials/memcached%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB.html</guid>
        
        <category>memcached</category>
        
        
        <category>tutorials</category>
        
      </item>
    
      <item>
        <title>Android View的可见性检查方法</title>
        <description>&lt;!-- 这里显示的是摘要信息也是概要信息 --&gt;

&lt;p&gt;Android View的可见性检查方法，该博客引用自UncleChen的博客，此处只做为备份&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#一背景&quot; id=&quot;markdown-toc-一背景&quot;&gt;一、背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#二检查view是否可见的基本方法从外部检查view&quot; id=&quot;markdown-toc-二检查view是否可见的基本方法从外部检查view&quot;&gt;二、检查View是否可见的基本方法（从外部检查View）&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-viewgetvisibility&quot; id=&quot;markdown-toc-1-viewgetvisibility&quot;&gt;1. View.getVisibility()&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-viewisshown&quot; id=&quot;markdown-toc-2-viewisshown&quot;&gt;2. View.isShown()&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-viewgetglobalvisiblerect&quot; id=&quot;markdown-toc-3-viewgetglobalvisiblerect&quot;&gt;3. View.getGlobalVisibleRect&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#关于getglobalvisiblerect方法的特别说明&quot; id=&quot;markdown-toc-关于getglobalvisiblerect方法的特别说明&quot;&gt;关于&lt;strong&gt;getGlobalVisibleRect&lt;/strong&gt;方法的特别说明&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-viewgetlocalvisiblerect&quot; id=&quot;markdown-toc-4-viewgetlocalvisiblerect&quot;&gt;4. View.getLocalVisibleRect&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-判断手机屏幕是否熄灭or是否解锁&quot; id=&quot;markdown-toc-5-判断手机屏幕是否熄灭or是否解锁&quot;&gt;5. 判断手机屏幕是否熄灭or是否解锁&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#三listviewrecyclerviewscrollview中如何检查view的可见性&quot; id=&quot;markdown-toc-三listviewrecyclerviewscrollview中如何检查view的可见性&quot;&gt;三、ListView、RecyclerView、ScrollView中如何检查View的可见性&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-scrollview&quot; id=&quot;markdown-toc-1-scrollview&quot;&gt;1. ScrollView&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-listview&quot; id=&quot;markdown-toc-2-listview&quot;&gt;2. ListView&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-recyclerview&quot; id=&quot;markdown-toc-3-recyclerview&quot;&gt;3. RecyclerView&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#四小结&quot; id=&quot;markdown-toc-四小结&quot;&gt;四、小结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;blockquote&gt;
  &lt;p&gt;原文链接：&lt;a href=&quot;http://unclechen.github.io/2016/10/17/Android%20View%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7%E6%A3%80%E6%9F%A5%E6%96%B9%E6%B3%95-%E4%B8%8A%E7%AF%87/&quot;&gt;Android View的可见性检查方法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;一背景&quot;&gt;一、背景&lt;/h2&gt;

&lt;p&gt;在Android开发中有时候会遇到需要检查一个View是不是对用户可见，比如在消息流中，根据ImageView是否在屏幕中出现了再决定加载它，或者当视频滑入屏幕被用户可见时才播放、滑出屏幕就自动停止播放等等。乍一看好像都是在ListView、RecyclerView、ScrollView这些组件里面比较需要做这件事，今天总结一下我在实际开发中是怎么处理View可见性检查的。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;二检查view是否可见的基本方法从外部检查view&quot;&gt;二、检查View是否可见的基本方法（从外部检查View）&lt;/h2&gt;

&lt;h3 id=&quot;1-viewgetvisibility&quot;&gt;1. View.getVisibility()&lt;/h3&gt;

&lt;p&gt;很显然，我们可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;View.getVisibility()&lt;/code&gt;来检查一个它是否处于&lt;strong&gt;View.VISIBLE&lt;/strong&gt;状态。这是&lt;strong&gt;最基本&lt;/strong&gt;的检查，如果连这个方法得到的返回值都是&lt;strong&gt;View.INVISIBLE或者View.GONE&lt;/strong&gt;的话，那么它对用户肯定是不可见的。&lt;/p&gt;

&lt;h3 id=&quot;2-viewisshown&quot;&gt;2. View.isShown()&lt;/h3&gt;

&lt;p&gt;这个方法相当于对View的所有祖先调用getVisibility方法。看下它的实现：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;cm&quot;&gt;/**
     * Returns the visibility of this view and all of its ancestors
     *
     * @return True if this view and all of its ancestors are {@link #VISIBLE}
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isShown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//noinspection ConstantConditions&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mViewFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VISIBILITY_MASK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ViewParent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mParent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// We are not attached to the view root&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;看代码注释便知，这个方法&lt;strong&gt;递归地&lt;/strong&gt;去检查这个View以及它的parentView的Visibility属性是不是等于&lt;strong&gt;View.VISIBLE&lt;/strong&gt;，这样就对这个View的所有parentView做了一个检查。&lt;/p&gt;

&lt;p&gt;另外这个方法还在递归的检查过程中，检查了&lt;code class=&quot;highlighter-rouge&quot;&gt;parentView == null&lt;/code&gt;，也就是说所有的parentView都不能为null。否则就说明这个View根本没有被&lt;code class=&quot;highlighter-rouge&quot;&gt;addView&lt;/code&gt;过（比如使用Java代码创建界面UI时，可能会先new一个View，然后根据条件动态地把它add带一个ViewGroup中），那肯定是不可能对用户可见的，这里很好理解。&lt;/p&gt;

&lt;h3 id=&quot;3-viewgetglobalvisiblerect&quot;&gt;3. View.getGlobalVisibleRect&lt;/h3&gt;

&lt;p&gt;先看下什么是&lt;a href=&quot;https://developer.android.com/reference/android/graphics/Rect.html&quot;&gt;Rect&lt;/a&gt;：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rect holds four integer coordinates for a rectangle. The rectangle is represented by the coordinates of its 4 edges (left, top, right bottom). 
Rect代表一个矩形，这个矩形可以由它左上角坐标(left, top)、右下角坐标(right, bottom)表示。所以每一个Rect对象里面都有left, top, right bottom这4个属性。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用这个方法的代码非常简单，如下所示，直接可以得到rect对象和方法的返回值visibility：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getGlobalVisibleRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;看一下该方法的注释：当这个View只要有一部分仍然在屏幕中（没有被父View遮挡，所谓的&lt;strong&gt;not clipped by any of its parents&lt;/strong&gt;），那么将把没有被遮挡的那部分区域保存在rect对象中返回，且方法的返回值是true，即visibility=true。此时的rect是以手机屏幕作为坐标系（所谓的&lt;strong&gt;global coordinates&lt;/strong&gt;），即原点是屏幕左上角；如果它全部被父View遮挡住了或者本身就是不可见的，返回的visibility就为false。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cm&quot;&gt;/**
     * If some part of this view is not clipped by any of its parents, then
     * return that area in r in global (root) coordinates. To convert r to local
     * coordinates (without taking possible View rotations into account), offset
     * it by -globalOffset (e.g. r.offset(-globalOffset.x, -globalOffset.y)).
     * If the view is completely clipped or translated out, return false.
     *
     * @param r If true is returned, r holds the global coordinates of the
     *        visible portion of this view.
     * @param globalOffset If true is returned, globalOffset holds the dx,dy
     *        between this view and its root. globalOffet may be null.
     * @return true if r is non-empty (i.e. part of the view is visible at the
     *         root level.
     */&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;举例子看一下，先看布局：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;xmlns:tools=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;View&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#0000ff&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_marginLeft=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-90dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-90dp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在xml中定义了一个View，给它设置负值的marginLeft和marginTop，让它只有一部分可以显示在屏幕中。可以看到这个View只有10x10dp大小可以出现在屏幕里面，但是只要有这么点大小可以在屏幕中，上面的方法的返回值就是：&lt;strong&gt;visibility=true&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;执行的效果如下图所示，可以看到100x100dp的蓝色矩形虽然只剩下&lt;strong&gt;左上角的10x10dp蓝色小方块&lt;/strong&gt;可见，但是visibility仍然等于true。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/images/201804/18-visible-01.jpg&quot; alt=&quot;self-visibility&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时的GlobalVisibleRect的左上角(left,top)和右下角(right,bottom)分别为&lt;code class=&quot;highlighter-rouge&quot;&gt;(0, 280)和(36, 316)&lt;/code&gt;。在这里top不为0是因为标题栏和系统状态栏已经占据了一定的屏幕高度。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;tips：这里写代码时测试getGlobalVisibleRect方法时，记得要等View已经绘制完成后，再去调用View的getGlobalVisibleRect方法，否则无法得到的返回值都是0。这和获取View的宽高原理是一样的，如果View没有被绘制完成，那么View.getWidth和View.getHeight一定是等于0的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;关于getglobalvisiblerect方法的特别说明&quot;&gt;关于&lt;strong&gt;getGlobalVisibleRect&lt;/strong&gt;方法的特别说明&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;这个方法只能检查出这个View在手机屏幕（或者说是相对它的父View）的位置，而不能检查出与其他兄弟View的相对位置&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;比如说有一个ViewGroup，下面有View1、View2这两个子View，View1和View2是平级关系。此时如果View2盖住了View1，那么用getGlobalVisibleRect方法检查View1的可见性，得到的返回值依然是true，得到的可见矩形区域rect也是没有任何变化的。也就是说&lt;strong&gt;View1.getGlobalVisibleRect(rect)得到的结果与View2没有任何关系。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;空说无凭，看个具体的例子，先看xml：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;View&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/bottom_view&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_centerInParent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_marginLeft=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-90dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-90dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#0000ff&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 这里为了看清bottom_view, 给top_view的背景色加了一个透明度 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;View&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/top_view&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200dp&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_centerInParent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:background=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#9000ffff&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个xml很简单，两个View，分别是下层的bottom_view（100x100dp，在父ViewGroup中居中），
top_view（200x200dp，也在父ViewGroup居中，因此可以完全盖住bottom_view）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/images/201804/18-visible-02.jpg&quot; alt=&quot;related-visibility&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们用getGlobalVisibleRect来获取一下bottom_view的visibleRect和visibility，得到的结果是：&lt;strong&gt;visibility=true，rect的左上角(left, top)和右下角(right, bottom)是(545, 1161)和(895, 1511)。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;即使把top_view从xml里面删掉，我们得到visibility和rect也是一样的。&lt;/p&gt;

&lt;p&gt;所以&lt;code class=&quot;highlighter-rouge&quot;&gt;getGlobalVisibleRect&lt;/code&gt;方法并不是万能的，因为它只能检查View和他们的ParentView之间的位置进而判它断是不是在屏幕中可见。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;PS：有一次我还想到个奇葩思路，那就是把这个View的兄弟View找出来，也拿出它的GlobalVisibleRect，然后对比兄弟View和这个View的GlobalVisibleRect，看是不是有重合的地方。但是这也只能表明屏幕这一块区域内有两个View，还是无法判断到底是谁遮挡住了谁。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;4-viewgetlocalvisiblerect&quot;&gt;4. View.getLocalVisibleRect&lt;/h3&gt;

&lt;p&gt;这个方法和getGlobalVisibleRect有些类似，也可以拿到这个View在屏幕的可见区域的坐标，&lt;strong&gt;唯一的区别getLocalVisibleRect(rect)获得的rect坐标系的原点是View自己的左上角，而不是屏幕左上角。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;先看例子，仍然是使用上面第2个例子的代码，加上下面的代码，执行一下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localRect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localVisibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLocalVisibleRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;得到的local坐标结果是：&lt;strong&gt;localVisibility=true，localRect的左上角(left, top)和右下角(right, bottom)为(0, 0)和(350, 350)&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;而global坐标的结果是：&lt;strong&gt;visibility=true，rect的左上角为(545, 1161)，右下角为(895,1511)。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;看下getLocalVisibleRect的源码&lt;/strong&gt;，原来就是先获取View的offset point（相对屏幕或者ParentView的偏移坐标），然后再去调用getGlobalVisibleRect(Rect r, Point globalOffset)方法来获取可见区域，最后再把得到的GlobalVisibleRect和Offset坐标做一个加减法，转换坐标系原点。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所以只要这个View的左上角在屏幕中，它的LocalVisibleRect的左上角坐标就一定是(0,0)，如果View的右下角在屏幕中，它的LocalVisibleRect右下角坐标就一定是(view.getWidth(), view.getHeight())。&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getLocalVisibleRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mAttachInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mAttachInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getGlobalVisibleRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// make r local&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-判断手机屏幕是否熄灭or是否解锁&quot;&gt;5. 判断手机屏幕是否熄灭or是否解锁&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;PowerManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PowerManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;POWER_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isScreenOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isScreenOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isInteractive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInteractive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 可能有些版本上面isScreenOn方法隐藏了或者是deprecated了，可以尝试反射调用它，但是要记得用的时候catch异常&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isScreenOnMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;isScreenOn&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isScreenOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isScreenOnMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invoke&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里不深究解锁和屏幕是否熄灭的实现方法了，检查View的可见性虽然和屏幕的状态看起来没有直接关系，但是在做检查前先对屏幕的状态做一个检查也是很有必要的，如果屏幕都已经关闭了，那这个View当然是对用户不可见的。&lt;/p&gt;

&lt;h2 id=&quot;三listviewrecyclerviewscrollview中如何检查view的可见性&quot;&gt;三、ListView、RecyclerView、ScrollView中如何检查View的可见性&lt;/h2&gt;

&lt;p&gt;说实话感觉App开发中用得最多的就是各种列表啊、滚动滑动的View。在Android里面这几个可以滚动的View，都有着各自的特点。在用到上面的检测方法时，可以好好结合这几个View的特点，在它们各自的滚动过程中，更加有效的去检查View的可见性。我们可以先根据自己的业务需要，把上面提到的方法封装成一个&lt;code class=&quot;highlighter-rouge&quot;&gt;VisibilityCheckUtil&lt;/code&gt;工具类，例如可以提供一个check方法，当View的物理面积有50%可见时，就返回true。&lt;/p&gt;

&lt;h3 id=&quot;1-scrollview&quot;&gt;1. ScrollView&lt;/h3&gt;

&lt;p&gt;假设我们有一个mView在mScrollView中，我们可以监听mScrollView的滚动，在onScrollChanged中检查mView的可见性。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;mScrollView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getViewTreeObserver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addOnScrollChangedListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewTreeObserver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnScrollChangedListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

          &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
          &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onScrollChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 可以先判断ScrollView中的mView是不是在屏幕中可见&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrollBounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mScrollView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHitRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrollBounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLocalVisibleRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrollBounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;// 再用封装好的工具类检查可见性是否大于50%&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VisibilityCheckUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-listview&quot;&gt;2. ListView&lt;/h3&gt;

&lt;p&gt;假设我们在mListView的第10个位置（界面上是第11个item）有一个需要检查可见性的mView。&lt;/p&gt;

&lt;p&gt;首先要监听mListView的滚动，接着在onScroll回调中，调用mListView.getFirstVisiblePosition和mListView.getLastVisiblePosition查看第10个位置是否处于可见范围，然后在调用封装好的VisibilityCheckUtil去检查mView是否可见。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;mListView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnScrollListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnScrollListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onScrollStateChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AbsListView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrollState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mScrollState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrollState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onScroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AbsListView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstVisibleItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visibleItemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalItemCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mScrollState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnScrollListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SCROLL_STATE_IDLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mListView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFirstVisiblePosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mListView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLastVisiblePosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 满足3个条件：先判断ListView中的mView是不是在可见范围中，再判断是不是大于50%面积可见&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VisibilityCheckUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-recyclerview&quot;&gt;3. RecyclerView&lt;/h3&gt;

&lt;p&gt;和上面类似，还是把mView摆放在第10个位置，检查原理和ListView类似。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;mLinearLayoutManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinearLayoutManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mRecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setLayoutManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mLinearLayoutManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mRecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addOnScrollListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnScrollListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onScrolled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecyclerView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onScrolled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recyclerView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mLinearLayoutManager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstVisiblePosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mLinearLayoutManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findFirstVisibleItemPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastVisiblePosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mLinearLayoutManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findLastVisibleItemPosition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 同样是满足3个条件&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstVisiblePosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastVisiblePosition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VisibilityCheckUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// do something&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实际的开发中肯定会遇到更多的场景，我们都要先分析界面的特点，再结合前面提到的几个方法，更有效地检查View的可见性。这里最后再给大家推荐一个开源的项目——&lt;a href=&quot;https://github.com/danylovolokh/VideoPlayerManager&quot;&gt;VideoPlayerManager&lt;/a&gt;，里面就用到&lt;code class=&quot;highlighter-rouge&quot;&gt;getLocalVisibleRect&lt;/code&gt;来检测View的可见面积，进而控制在ListView和RecyclerView中哪一个Item应该显示什么内容。&lt;/p&gt;

&lt;h2 id=&quot;四小结&quot;&gt;四、小结&lt;/h2&gt;

&lt;p&gt;本篇博客的思路，都是从View的外部去检查一个View的可见性。首先提到了一些基本的方法，然后介绍了几种常见的界面下可以怎么使用这些各种方法。&lt;/p&gt;

&lt;p&gt;如果是App开发者的话，自己写的界面自己去判断View的可见性，有上面这些方法应该就够用了。但是如果你是一个SDK开发者，给App开发者提供第三方的library时（通常是自定义View这类的库），也能够检查开发者的使用到的View，并根据可见性来自动管理一些View的操作，那就非常棒了。这时从外部去检查一个View的可见性可能就不够用了，我们可以换一个角度，从内部去检查一个View的可见性，具体内容详见&lt;a href=&quot;http://unclechen.github.io/2016/10/21/Android-View的可见性检查方法-下篇/&quot;&gt;Android View的可见性检查方法-下篇&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Apr 2018 17:45:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/android/android-view%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7%E6%A3%80%E6%9F%A5%E6%96%B9%E6%B3%95.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/android/android-view%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7%E6%A3%80%E6%9F%A5%E6%96%B9%E6%B3%95.html</guid>
        
        <category>visible</category>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>jar包中assets文件夹中jar文件反编译</title>
        <description>&lt;p&gt;第三方jar包中的assets文件夹中包含jar文件，如何获取assets中的jar文件并反编译查看源码逻辑&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#获取assets文件夹中的jar文件&quot; id=&quot;markdown-toc-获取assets文件夹中的jar文件&quot;&gt;获取assets文件夹中的jar文件&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#解压jar文件&quot; id=&quot;markdown-toc-解压jar文件&quot;&gt;解压jar文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#解压assets文件夹中的jar文件&quot; id=&quot;markdown-toc-解压assets文件夹中的jar文件&quot;&gt;解压assets文件夹中的jar文件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#反编译classesdex文件&quot; id=&quot;markdown-toc-反编译classesdex文件&quot;&gt;反编译classes.dex文件&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;h2 id=&quot;获取assets文件夹中的jar文件&quot;&gt;获取assets文件夹中的jar文件&lt;/h2&gt;
&lt;h3 id=&quot;解压jar文件&quot;&gt;解压jar文件&lt;/h3&gt;
&lt;p&gt;jar文件是将相关文件打包压缩并使用jar作为后缀命名，因此想要获取assets文件夹中的jar文件，需要将jar文件直接用压缩解压软件解压，从而获取assets文件夹中的jar文件。解压后的目录如下图所示：
&lt;img src=&quot;/assets/blog/images/201804/08-jar-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;解压assets文件夹中的jar文件&quot;&gt;解压assets文件夹中的jar文件&lt;/h3&gt;
&lt;p&gt;同样，将assets文件夹中的jar文件解压，获取classes.dex文件，解压后如下图所示：
&lt;img src=&quot;/assets/blog/images/201804/08-jar-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;反编译classesdex文件&quot;&gt;反编译classes.dex文件&lt;/h3&gt;
&lt;p&gt;使用dex2jar将classes文件反编译成jar文件，然后使用Java Decompiler软件读取jar文件。&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Apr 2018 14:52:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/tools/jar%E5%8C%85%E4%B8%ADassets%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%ADjar%E6%96%87%E4%BB%B6%E5%8F%8D%E7%BC%96%E8%AF%91.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/tools/jar%E5%8C%85%E4%B8%ADassets%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%ADjar%E6%96%87%E4%BB%B6%E5%8F%8D%E7%BC%96%E8%AF%91.html</guid>
        
        <category>jar</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>redis启动</title>
        <description>&lt;p&gt;redis启动&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#redis启动&quot; id=&quot;markdown-toc-redis启动&quot;&gt;redis启动&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#开启redis&quot; id=&quot;markdown-toc-开启redis&quot;&gt;开启redis：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#连接redis&quot; id=&quot;markdown-toc-连接redis&quot;&gt;连接redis：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;h2 id=&quot;redis启动&quot;&gt;redis启动&lt;/h2&gt;
&lt;h3 id=&quot;开启redis&quot;&gt;开启redis：&lt;/h3&gt;
&lt;p&gt;在bin目录下执行，启动redis需要指定启动时的配置文件：
./redis-server ../conf/redis.conf&lt;/p&gt;
&lt;h3 id=&quot;连接redis&quot;&gt;连接redis：&lt;/h3&gt;
&lt;p&gt;./redis-cli -h 192.168.31.69 -p 22222&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Apr 2018 10:46:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/config/redis%E5%90%AF%E5%8A%A8.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/config/redis%E5%90%AF%E5%8A%A8.html</guid>
        
        <category>redis</category>
        
        
        <category>config</category>
        
      </item>
    
      <item>
        <title>emacs快捷方式.</title>
        <description>&lt;!-- 这里显示的是摘要信息也是概要信息 --&gt;

&lt;p&gt;emacs快捷方式汇总&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#基本快捷方式&quot; id=&quot;markdown-toc-基本快捷方式&quot;&gt;基本快捷方式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#窗格&quot; id=&quot;markdown-toc-窗格&quot;&gt;窗格&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#插入与删除&quot; id=&quot;markdown-toc-插入与删除&quot;&gt;插入与删除&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件&quot; id=&quot;markdown-toc-文件&quot;&gt;文件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#缓冲区&quot; id=&quot;markdown-toc-缓冲区&quot;&gt;缓冲区&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#自动保存auto-save恢复缓存文件&quot; id=&quot;markdown-toc-自动保存auto-save恢复缓存文件&quot;&gt;自动保存（AUTO SAVE），恢复缓存文件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#状态栏mode-line&quot; id=&quot;markdown-toc-状态栏mode-line&quot;&gt;状态栏（MODE LINE）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#搜索&quot; id=&quot;markdown-toc-搜索&quot;&gt;搜索&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#多窗格&quot; id=&quot;markdown-toc-多窗格&quot;&gt;多窗格&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#多窗口&quot; id=&quot;markdown-toc-多窗口&quot;&gt;多窗口&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#递归编辑&quot; id=&quot;markdown-toc-递归编辑&quot;&gt;递归编辑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;h2 id=&quot;基本快捷方式&quot;&gt;基本快捷方式&lt;/h2&gt;

&lt;p&gt;M ： META 键，如果你没有 META、EDIT 或 ALT 键那么就先按 &lt;ESC&gt; 再按对应的键  
C-x C-c 退出 Emacs  
C-g  终止一条执行过久的命令，还可以取消数字参数和只输入到一半的命令。  
C-v     向前移动一屏  
M-v     向后移动一屏  
C-l     重绘屏幕，并将光标所在行置于屏幕的中央（注意是 CONTROL-L，不是 CONTROL-1）&lt;/ESC&gt;&lt;/p&gt;

&lt;p&gt;C-f     向右移动一个字符&lt;br /&gt;
C-b     向左移动一个字符&lt;br /&gt;
M-f     向右移动一个词【对中文是移动到下一个标点符号】&lt;br /&gt;
M-b     向左移动一个词【对中文是移动到上一个标点符号】&lt;br /&gt;
C-n     移动到下一行&lt;br /&gt;
C-p     移动到上一行&lt;br /&gt;
C-a     移动到行首&lt;br /&gt;
C-e     移动到行尾&lt;br /&gt;
M-a     移动到句首&lt;br /&gt;
M-e     移动到句尾&lt;/p&gt;

&lt;p&gt;“P N B F”四个字母分别代表了四个词，用这四个词记忆这些组合键会更容易：&lt;br /&gt;
P 代表 previous（上一行），N 代表 next（下一行），B 代表 backward（回退），而 F 则代表 forward（前进）。这些组合键今后将与你形影不离。&lt;/p&gt;

&lt;p&gt;请注意 C-f 、C-b 和 M-f 、M-b 两对之间的类比关系。通常的惯例是：META 系列组合键用来操作“由语言定义的单位（比如词、句子、段落）”，而 CONTROL系列组合键用来操作“与语言无关的基本单位（比如字符、行等等）”。&lt;/p&gt;

&lt;p&gt;M-&amp;lt; （META 小于号，按住shift键）可以将光标移动到所有文字的最开头；&lt;br /&gt;
M-&amp;gt; （META 大于号，按住shift键）可以将光标移动到所有文字的最末尾。&lt;br /&gt;
C-u 8 C-f 会向前移动 8 个字符&lt;br /&gt;
C-u 8 C-v 将文本向下滚动 8 行，而不是8屏&lt;/p&gt;

&lt;p&gt;C-h k C-f 查找C-f快捷键的帮助文档（创建一个新的窗口用于显示帮助文档）&lt;br /&gt;
C-x 1   只保留一个窗格（也就是关掉其它所有窗格）&lt;br /&gt;
C-u 0 C-l  将光标所在的行滚动为第一行&lt;br /&gt;
如果你不小心按了一下 &lt;ESC&gt;，你也可以用 C-g 来取消它。  
【这个说法似乎有问题，因为按照这个按键顺序输入的应该是 C-M-g。  
  取消 &lt;ESC&gt; 的正确做法是再连按两次 &lt;ESC&gt;。】&lt;/ESC&gt;&lt;/ESC&gt;&lt;/ESC&gt;&lt;/p&gt;

&lt;h2 id=&quot;窗格&quot;&gt;窗格&lt;/h2&gt;

&lt;p&gt;有一系列命令是以 CONTROL-x 开始的，这些命令许多都跟“窗格、文件、缓冲区【缓冲区（buffer）会在后文详细介绍】”等等诸如此类的东西有关，其中有些命令可能包含了 2 个、3 个或者 4 个字符。&lt;br /&gt;
C-x 1   只保留一个窗格（也就是关掉其它所有窗格）。&lt;br /&gt;
C-h k C-f  观察当一个新窗格出现时当前窗格（该命令用来显示C-f 命令的帮助文档）是如何缩小的。&lt;/p&gt;

&lt;h2 id=&quot;插入与删除&quot;&gt;插入与删除&lt;/h2&gt;

&lt;p&gt;C-u 8 *，这将会插入8个连续的 * 号，重复执行输入字符的命令实际上就是输入多个相同的字符。&lt;/p&gt;

&lt;p&gt;&amp;lt;DEL&amp;gt;       删除光标前的一个字符&lt;br /&gt;
C-d          删除光标后的一个字符&lt;br /&gt;
M-&amp;lt;DEL&amp;gt;     移除光标前的一个词&lt;br /&gt;
M-d          移除光标后的一个词&lt;br /&gt;
C-k          移除从光标到“行尾”间的字符&lt;br /&gt;
M-k          移除从光标到“句尾”间的字符&lt;/p&gt;

&lt;p&gt;选中某一部分文字：首先把光标移动到你想要移除的区域的一端，然后按 C-&amp;lt;SPC&amp;gt;（&amp;lt;SPC&amp;gt;指空格）【注意，C-&amp;lt;SPC&amp;gt; 往往被中文用户设定成输入法热键，如果这样，C-&amp;lt;SPC&amp;gt; 就被系统拦截而无法传递给 Emacs 了，在这种情况下可以使用C-@。】，然后将光标移动到你准备移除的文字的另一端。这个时候， Emacs 会高亮光标和你按下 C-&amp;lt;SPC&amp;gt; 之间的文本。&lt;/p&gt;

&lt;p&gt;C-w 剪切复制光标所在的行&lt;br /&gt;
M-w 复制光标所在的行&lt;br /&gt;
C-y 粘贴&lt;br /&gt;
M-y 连续召回：在用 C-y 召回最近移除的文字之后，紧接着再按 M-y 就可以召回再前一次被移除的内容，再按一次 M-y 又可以召回再上一次的……连续使用 M-y 直到找到你想要召回的东西，然什么也不用做，继续编辑就行了。&lt;br /&gt;
C-/ 撤销&lt;/p&gt;

&lt;h2 id=&quot;文件&quot;&gt;文件&lt;/h2&gt;
&lt;p&gt;C-x C-f 输入文件名创建一个缓冲文件&lt;br /&gt;
 C-x C-f   寻找一个文件&lt;br /&gt;
 C-x C-s   储存这个文件&lt;/p&gt;

&lt;h2 id=&quot;缓冲区&quot;&gt;缓冲区&lt;/h2&gt;
&lt;p&gt;C-x b 显示缓冲区&lt;br /&gt;
 C-x s   保存多个缓冲区&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;命令集扩展（EXTENDING THE COMMAND SET）&lt;br /&gt;
 C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。&lt;br /&gt;
 M-x     命令名扩展。M-x 之后输入一个命令名。&lt;br /&gt;
 C-x C-z 最大最小话emacs&lt;br /&gt;
C-x C-b         列出缓冲区。&lt;br /&gt;
C-x C-c         离开 Emacs。&lt;br /&gt;
C-x 1           关掉其它所有窗格，只保留一个。&lt;br /&gt;
C-x u           撤销，以一种git log的简单方式显示当前文档的修改历史，可以回撤到自己想要的文件内容！！&lt;br /&gt;
替换：replace-string（字符串替换）这个命令，它会把一个字符串替换成另一个。在输入 M-x 之后，Emacs 会在屏幕底端向你询问并等待你输入命令名。如你想输入“replace-string”，其实只需要敲“repl s&amp;lt;TAB&amp;gt;”就行了，Emacs 会帮你自动补齐。输入完之后按 &amp;lt;Return&amp;gt; 提交。注意！！！！只会替换掉光标之后符合条件的字段。&lt;br /&gt;
 M-% 交互式替换  （暂不清楚如何使用）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;自动保存auto-save恢复缓存文件&quot;&gt;自动保存（AUTO SAVE），恢复缓存文件&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编辑的文件写入一个“自动保存”文件中。自动保存文件的文件名的头尾各有一个“#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫“#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。&lt;/p&gt;

&lt;p&gt;所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保存文件）然后输入 M-x recover file &amp;lt;Return&amp;gt; 来恢复你的自动保存文件。在提示确认的时候，输入 yes&amp;lt;Return&amp;gt;。&lt;/p&gt;

&lt;h2 id=&quot;状态栏mode-line&quot;&gt;状态栏（MODE LINE）&lt;/h2&gt;
&lt;p&gt;主模式都是可以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental模式。 Fundamental 模式中，M-f 和 M-b 都将单引号视为分隔单词的符号。&lt;/p&gt;

&lt;p&gt;M-x text-mode 切换到自然语言文本模式，该模式下，M-f 和 M-b 现在把单引号（’）视为词的一部分。&lt;/p&gt;

&lt;p&gt;自动折行模式：&lt;br /&gt;
自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。&lt;br /&gt;
用 M-x auto-fill-mode &amp;lt;Return&amp;gt; 启动自动折行模式。再用一次这条命令，自动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来“开关（toggle）”模式。&lt;/p&gt;

&lt;h2 id=&quot;搜索&quot;&gt;搜索&lt;/h2&gt;
&lt;p&gt;C-s 是向前搜索，C-r 是向后搜索。&lt;br /&gt;
【你会发现 C-g 会让光标回到搜索开始的位置，而 &amp;lt;Return&amp;gt; 则让光标留在搜索结果上，这是很有用的功能。】&lt;/p&gt;

&lt;h2 id=&quot;多窗格&quot;&gt;多窗格&lt;/h2&gt;
&lt;p&gt;C-x 2，它会将屏幕划分成两个窗格。&lt;br /&gt;
C-x o 将光标移回到其他窗格里，C-x o 可以遍历所有窗格。&lt;br /&gt;
查找文件并在一个新的窗格打开：输入 C-x 4 C-f，紧跟着输入一个文件名，再用 &amp;lt;Return&amp;gt; 结束。可以看到你指定的文件出现在下方的窗格中，同时光标也跳到了那里。&lt;br /&gt;
C-x 0	Close current window&lt;br /&gt;
C-x 1	Close all windows except the current one&lt;br /&gt;
C-x 2	Split current window in two vertically&lt;br /&gt;
C-x 3	Split current window in two horizontally&lt;br /&gt;
C-x o	Switch to other window&lt;/p&gt;

&lt;h2 id=&quot;多窗口&quot;&gt;多窗口&lt;/h2&gt;
&lt;p&gt;M-x make-frame &amp;lt;Return&amp;gt;。可以看到一个新的窗口出现在了你的屏幕上。&lt;br /&gt;
 M-x delete-frame &amp;lt;Return&amp;gt;。这个命令将会关闭选中的窗口。&lt;br /&gt;
 C-x 5 0	Close current frame&lt;br /&gt;
 C-x 5 1	Close all frames except the current one&lt;br /&gt;
 C-x 5 2	Create a new frame&lt;/p&gt;

&lt;h2 id=&quot;递归编辑&quot;&gt;递归编辑&lt;/h2&gt;
&lt;p&gt;ESC ESC ESC 离开递归编辑，这是一个最通用的“离开”命令，你甚至可以使用它来关掉多余的窗格，或者离开小缓冲。（赞一个！）你不能用 C-g 退出递归编辑，因为 C-g 的作用是取消“本层递归编辑之内”的命令和其参数（arguments）。&lt;/p&gt;

&lt;p&gt;其他快捷方式：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;格式化代码：&lt;br /&gt;
C-x h：全选&lt;br /&gt;
M-x indent-region&lt;/li&gt;
  &lt;li&gt;在当前行之前加入一空行：C-j&lt;/li&gt;
  &lt;li&gt;在代码后面添加注释：M+;&lt;/li&gt;
  &lt;li&gt;替换光标之后的匹配的字符串（注意按住shift）：M+%&lt;/li&gt;
  &lt;li&gt;多光标&lt;br /&gt;
C-&amp;lt; 光标向上&lt;br /&gt;
C-&amp;gt;或C-+ 光标向下&lt;/li&gt;
  &lt;li&gt;移动光标所在的行向上或向下移动（与mac系统快捷键冲突）&lt;br /&gt;
M-up或者M-down&lt;/li&gt;
  &lt;li&gt;以「括号对」为向前、向后跳转光标&lt;br /&gt;
C-M-p / c-M-n&lt;/li&gt;
  &lt;li&gt;使用键盘宏 kbd-macro录制宏，例如：&lt;br /&gt;
C-x ( start-kbd-macro&lt;br /&gt;
C-n  到下一行&lt;br /&gt;
C-e  移动到行尾&lt;br /&gt;
C-S-b  选中最后一个字符&lt;br /&gt;
C-w  删除之&lt;br /&gt;
C-x )  end-kbd-macro&lt;br /&gt;
以上录制了宏，下面调用录制的宏（也可以将宏录制下来保存为函数）：&lt;br /&gt;
C-x e       执行 1 次刚才录制的宏&lt;br /&gt;
C-u 5 C-x e 执行 5 次刚才录制的宏，当然也可以执行 1000 遍啦&lt;br /&gt;
C-u 0 C-x e 也可以执行到buffer end，即执行无限次&lt;/li&gt;
  &lt;li&gt;输入的lambda转为𝝺字符如何处理？&lt;br /&gt;
M-x prettify-symbols-mode 从而切换是否转换为𝝺&lt;br /&gt;
参见：http://ergoemacs.org/emacs/emacs_pretty_lambda.html&lt;/li&gt;
  &lt;li&gt;从当前光标处换行到下一行&lt;br /&gt;
M-j或者C-j&lt;/li&gt;
  &lt;li&gt;在光标所行下插入一新行&lt;br /&gt;
shift-enter&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。&lt;/p&gt;

&lt;p&gt;快捷键参考：https://aifreedom.com/technology/112&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Apr 2018 23:49:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/tools/emacs%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/tools/emacs%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F.html</guid>
        
        <category>emacs</category>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>databinding 使用问题总结</title>
        <description>&lt;p&gt;对 Databinding 使用过程中发现的问题的总结。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#提示&quot; id=&quot;markdown-toc-提示&quot;&gt;提示&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#使用资源表达式&quot; id=&quot;markdown-toc-使用资源表达式&quot;&gt;使用资源表达式&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#nullpointerexception&quot; id=&quot;markdown-toc-nullpointerexception&quot;&gt;NullPointerException&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#绑定元素&quot; id=&quot;markdown-toc-绑定元素&quot;&gt;绑定元素&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#two-way-bindings&quot; id=&quot;markdown-toc-two-way-bindings&quot;&gt;Two-way Bindings&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#view-attributes&quot; id=&quot;markdown-toc-view-attributes&quot;&gt;View Attributes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#view-references&quot; id=&quot;markdown-toc-view-references&quot;&gt;View References&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#注意事项&quot; id=&quot;markdown-toc-注意事项&quot;&gt;注意事项&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#included-layouts&quot; id=&quot;markdown-toc-included-layouts&quot;&gt;Included Layouts&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;h2 id=&quot;提示&quot;&gt;提示&lt;/h2&gt;

&lt;h3 id=&quot;使用资源表达式&quot;&gt;使用资源表达式&lt;/h3&gt;
&lt;p&gt;可以将dimen相加，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xmln&quot;&gt;android:padding=”@{@dim/textPadding + @dim/headerPadding}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;可以多次相加，但是在styles中使用无效。
参考：&lt;a href=&quot;https://medium.com/google-developers/android-data-binding-express-yourself-c931d1f90dfe&quot;&gt;Express Yourself&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;nullpointerexception&quot;&gt;NullPointerException&lt;/h3&gt;
&lt;p&gt;data binding表达式在求值时会检查空指针异常，如果为null，并不会提示NullPointerException，而是设置为null。如下所示：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;android:text=&quot;@{user.firstName ?? user.userName}&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;结果：text值为&lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;。&lt;br /&gt;
然而，如果求值表达式是在java代码中，则会产生NullPointerException，如下所示：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;android:text=”@{com.example.StringUtils.capitalize(user.firstName)}”
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;StringUtils为：&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;结果：产生NullPointerException。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;可通过以下方式引入StringUtils&lt;/p&gt;
  &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;data&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;variable&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.example.myapp.model.User&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;import&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.example.StringUtils&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;绑定元素&quot;&gt;绑定元素&lt;/h3&gt;
&lt;p&gt;关于绑定元素这部分可参考：&lt;a href=&quot;https://medium.com/google-developers/android-data-binding-lets-flip-this-thing-dc17792d6c24&quot;&gt;Let’s Flip This Thing&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;two-way-bindings&quot;&gt;Two-way Bindings&lt;/h4&gt;
&lt;p&gt;使用databinding绑定视图后，对于视图中元素值的变化，尤其是EditText值的变化，需要variable对象中的值也随之变化，就需要采用&lt;code class=&quot;highlighter-rouge&quot;&gt;@={}&lt;/code&gt;方式绑定元素值，如下所示：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@={user.firstName}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;view-attributes&quot;&gt;View Attributes&lt;/h4&gt;
&lt;p&gt;可以在表达式中获取视图的属性，就像是该属性是model的属性一样，如下所示：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;CheckBox&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/showName&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@{user.firstName}&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:visibility=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@{showName.checked ? View.VISIBLE : View.GONE}&quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;需要使用id来获取相应组件的属性&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;view-references&quot;&gt;View References&lt;/h4&gt;
&lt;p&gt;在lambda表达式中可以通过视图id来获取该视图的引用：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/firstName&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@={user.firstName}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;CheckBox&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:onCheckedChanged=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@{()-&amp;gt;handler.checked(firstName)}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;
&lt;h3 id=&quot;included-layouts&quot;&gt;Included Layouts&lt;/h3&gt;
&lt;p&gt;采用include嵌套布局时，可以为include设置variable，从而在include布局中直接引用variable值，方法参见：
&lt;a href=&quot;https://medium.com/google-developers/android-data-binding-adding-some-variability-1fe001b3abcc&quot;&gt;Android Data Binding: Adding some variability&lt;/a&gt;中关于’Included Layouts’部分。其中有一点需要注意：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;layout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;data&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;variable&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.example.myapp.model.User&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vertical&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@{user.image}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;layout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@layout/user_name&quot;&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;app:user=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@{user}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;include中&lt;code class=&quot;highlighter-rouge&quot;&gt;app:user=&quot;&quot;&lt;/code&gt;的user名称需要与include布局中的variable名称一致，同时使用&lt;code class=&quot;highlighter-rouge&quot;&gt;驼峰&lt;/code&gt;命名法命名，不然会出现找不到set方法的错误。&lt;br /&gt;
正确示例：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;app:userInfo=&quot;@{user}&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;错误示例：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;app:user_info=&quot;@{user}&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 18 Apr 2017 00:00:00 +0800</pubDate>
        <link>https://ljpww72729.github.io/android/databinding.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/android/databinding.html</guid>
        
        <category>databinding</category>
        
        
        <category>android</category>
        
      </item>
    
      <item>
        <title>博客语法示例</title>
        <description>&lt;!-- 这里显示的是摘要信息也是概要信息 --&gt;

&lt;p&gt;Jekyll kramdown 语法示例&lt;/p&gt;

&lt;!-- more --&gt;

&lt;nav style=&quot;z-index:9999;&quot;&gt;
  &lt;h3&gt;目录&lt;/h3&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#示例&quot; id=&quot;markdown-toc-示例&quot;&gt;示例&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#显示图片&quot; id=&quot;markdown-toc-显示图片&quot;&gt;显示图片：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#显示视频&quot; id=&quot;markdown-toc-显示视频&quot;&gt;显示视频：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#显示本地视频&quot; id=&quot;markdown-toc-显示本地视频&quot;&gt;显示本地视频：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#显示表格&quot; id=&quot;markdown-toc-显示表格&quot;&gt;显示表格：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#显示blockquote&quot; id=&quot;markdown-toc-显示blockquote&quot;&gt;显示blockquote&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#显示一个note&quot; id=&quot;markdown-toc-显示一个note&quot;&gt;显示一个Note&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#添加注释&quot; id=&quot;markdown-toc-添加注释&quot;&gt;添加注释：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#代码片段显示行号&quot; id=&quot;markdown-toc-代码片段显示行号&quot;&gt;代码片段显示行号&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#emoji表情&quot; id=&quot;markdown-toc-emoji表情&quot;&gt;emoji表情&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#参考文章&quot; id=&quot;markdown-toc-参考文章&quot;&gt;参考文章&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;

&lt;!-- 设置图片公共地址 --&gt;

&lt;h2 id=&quot;示例&quot;&gt;示例&lt;/h2&gt;
&lt;h3 id=&quot;显示图片&quot;&gt;显示图片：&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[![显示图片](/assets/blog/images/201704/logo.jpg &quot;image description&quot;)*My caption*][personal blog]
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://ljpww72729.github.com&quot;&gt;&lt;img src=&quot;/assets/blog/images/201704/logo.jpg&quot; alt=&quot;显示图片&quot; title=&quot;image description&quot; /&gt;&lt;em&gt;My caption&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;显示视频&quot;&gt;显示视频：&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;figure class=&quot;video_container&quot;&amp;gt;
&amp;lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/7V-fIGMDsmE&quot; frameborder=&quot;0&quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;figure class=&quot;video_container&quot;&gt;
  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/7V-fIGMDsmE&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;显示本地视频&quot;&gt;显示本地视频：&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;figure class=&quot;video_container&quot;&amp;gt;
  &amp;lt;video controls=&quot;true&quot; allowfullscreen=&quot;true&quot; poster=&quot;/assets/blog/images/201704/logo.jpg&quot;&amp;gt;
    &amp;lt;source src=&quot;/assets/blog/images/201704/movie.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;
  &amp;lt;/video&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;figure class=&quot;video_container&quot;&gt;
  &lt;video controls=&quot;true&quot; allowfullscreen=&quot;true&quot; poster=&quot;/assets/blog/images/201704/logo.jpg&quot;&gt;
    &lt;source src=&quot;/assets/blog/images/201704/movie.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;显示表格&quot;&gt;显示表格：&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;| Default aligned | Left aligned | Center aligned  | Right aligned  |
|-----------------|:-------------|:---------------:|---------------:|
| First body part | Second cell  | Third cell      | fourth cell    |
| Second line     | foo          | **strong**      | baz            |
| Third line      | quux         | baz             | bar            |
|-----------------+--------------+-----------------+----------------|
| Second body     |              |                 |                |
| 2nd line        |              |                 |                |
|-----------------+--------------+-----------------+----------------|
| Third body      |              |                 | Foo            |
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Default aligned&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Left aligned&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Center aligned&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Right aligned&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;First body part&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Second cell&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Third cell&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;fourth cell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Second line&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;foo&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;strong&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;baz&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Third line&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;quux&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;baz&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;bar&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Second body&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2nd line&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Third body&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;显示blockquote&quot;&gt;显示blockquote&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; This is a blockquote.
&amp;gt;     On multiple lines.
That may be lazy.
&amp;gt;
&amp;gt; This is the second paragraph.

----

&amp;gt; This is a paragraph.
&amp;gt;
&amp;gt; &amp;gt; A nested blockquote.
&amp;gt;
&amp;gt; ### Headers work
&amp;gt; {:.no_toc}
&amp;gt;
&amp;gt; * lists too
&amp;gt;
&amp;gt; and all other block-level **elements**.
&amp;gt;
&amp;gt; Even code blocks:
&amp;gt;
&amp;gt;      def hello
&amp;gt;        puts &quot;Hello world!&quot;
&amp;gt;      end
&amp;gt; {: .language-ruby}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a blockquote.
    On multiple lines.
That may be lazy.&lt;/p&gt;

  &lt;p&gt;This is the second paragraph.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a paragraph.&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;A nested blockquote.&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;h3 class=&quot;no_toc&quot; id=&quot;headers-work&quot;&gt;Headers work&lt;/h3&gt;

  &lt;ul&gt;
    &lt;li&gt;lists too&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;and all other block-level &lt;strong&gt;elements&lt;/strong&gt;.&lt;/p&gt;

  &lt;p&gt;Even code blocks:&lt;/p&gt;

  &lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;显示一个note&quot;&gt;显示一个Note&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; a note is something that needs to be mentioned but is apart from the context.&lt;/p&gt;

&lt;h3 id=&quot;添加注释&quot;&gt;添加注释：&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;This is a paragraph
{::comment}
This is a comment which is completely ignored.
{:/comment}
... paragraph continues here.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is a paragraph
&lt;!-- 
This is a comment which is completely ignored.
 --&gt;
… paragraph continues here.&lt;/p&gt;

&lt;h3 id=&quot;代码片段显示行号&quot;&gt;代码片段显示行号&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可通过在_config.yml中配置是否显示行号，如下：&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;# kramdown配置说明参见：https://kramdown.gettalong.org/options.html&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kramdown&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 显示行号参见：https://github.com/jekyll/jekyll/issues/4619#issuecomment-191267346&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 及https://kramdown.gettalong.org/syntax_highlighter/rouge.html&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;syntax_highlighter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rouge&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Rouge Highlighter in Kramdown › http://kramdown.gettalong.org/syntax_highlighter/rouge.html&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# span, block element options fall back to global&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;syntax_highlighter_opts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Rouge Options › https://github.com/jneen/rouge#full-options&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;css_class&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;highlight'&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#line_numbers: true # bad idea, spans don't need linenos and would inherit this option&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;line_numbers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;line_numbers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;start_line&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;emoji表情&quot;&gt;emoji表情&lt;/h3&gt;
&lt;p&gt;参考网址：&lt;a href=&quot;https://www.webpagefx.com/tools/emoji-cheat-sheet/&quot;&gt;emoji表情&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I give this plugin two :+1:!  :smirk:&lt;/p&gt;

&lt;h3 id=&quot;参考文章&quot;&gt;参考文章&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qiujuer/article/details/50419279&quot;&gt;代码高亮的几种选择&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;不过我只使用了默认的语法高亮&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sun, 09 Apr 2017 17:32:27 +0800</pubDate>
        <link>https://ljpww72729.github.io/tutorials/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">https://ljpww72729.github.io/tutorials/welcome-to-jekyll.html</guid>
        
        <category>jekyll</category>
        
        
        <category>tutorials</category>
        
      </item>
    
  </channel>
</rss>
